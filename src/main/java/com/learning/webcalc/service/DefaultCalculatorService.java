package com.learning.webcalc.service;import com.learning.webcalc.service.api.CalculatorService;import com.learning.webcalc.service.api.History;import com.learning.webcalc.service.api.HistoryService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.text.ParseException;import java.util.List;@Servicepublic class DefaultCalculatorService implements CalculatorService{    private final HistoryService historyService;    private final ExpressionProcessor expressionProcessor;    private final RpnConverter rpnConverter;    private final RpnCalculator rpnCalculator;    @Autowired    public DefaultCalculatorService(HistoryService historyService, ExpressionProcessor expressionProcessor, RpnConverter rpnConverter, RpnCalculator rpnCalculator)    {        this.historyService = historyService;        this.expressionProcessor = expressionProcessor;        this.rpnConverter = rpnConverter;        this.rpnCalculator = rpnCalculator;    }    @Override    public double calculate(String expression) throws ParseException    {        double result = calculateResult(expression);        historyService.store(expression, result);        return result;    }    public History getHistory()    {        return historyService.getHistory();    }    private double calculateResult(String expression) throws ParseException    {   // TODO: flow with Optional        expression = expressionProcessor.clean(expression);        List<Object> tokens = expressionProcessor.tokenize(expression);        tokens = rpnConverter.convert(tokens);        double value = rpnCalculator.calculate(tokens);        return value;    }}